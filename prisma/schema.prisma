generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String          @id @default(cuid())
  name            String?
  email           String?         @unique
  emailVerified   DateTime?
  image           String?
  firstName       String?
  lastName        String?
  role            Int             @default(0)
  institutionId   String?
  institutionName String?
  accounts        Account[]
  sessions        Session[]
  Authenticator   Authenticator[]
}

model Account {
  id                String @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String

  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  refresh_token_expires_in Int?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

/**
 * ---------- WebAuthn / Passkeys ----------
 */
model Authenticator {
  credentialID         String  @id // base64url (string)
  userId               String
  // keep as data fields, no FK to Account:
  providerAccountId    String
  credentialPublicKey  String  @db.Text
  counter              Int
  credentialDeviceType String
  credentialBackedUp   Boolean
  transports           String? @db.Text
  attestationFormat    String? @db.Text
  aaguid               String? @db.Text

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([providerAccountId])
}
